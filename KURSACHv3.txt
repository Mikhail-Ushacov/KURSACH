Реалізувати програму на C#/CLI за настипним завданням:
1. Реалізувати 5 Button ("Алгоритм Форда-Фалкерсона", "Алгоритм Эдмондса-Карпа", "Про алгоритми", "Порівняння", "MathBench")

2. Кнопки "Алгоритм Форда-Фалкерсона" та "Алгоритм Эдмондса-Карпа" виконують відповідний алгоритм над графом.

3. Кнопка "Про алгоритми" виводить основи роботи алгоритмів.

4. Кнопка "Порівняння" виводить основні відмінності алгоритмів. (порівнює два алгоритма)

5. Кнопка "MathBench" виконує алгоритм Форда-Фалкерсона 20 разів (перед кожною ітерацію робити паузу в 20 секунд), використовуючи спеціальний документ "graf.txt", для читання всіх потрібних даних. Таких як: кількість вершин, кількість ребер, матрицю відношень, масу ребер, час. Результат, тобто максимальний поток та загальний час(сума параметр "час" для всіх знайдених ребер), записувати у файл"result.txt". В кінці програма виконую перевірку точності, за наступною формулою: Сумма всіх максимальних потоків поділити на кількість графів. Таким самим чином для Эдмондса-Карпа. Та порівняти отримані результати між алгоритмами та відповідними заздалегіть перевіреним результатами. Результат виводиться через вікно загрузки(ProgresBar), вікно виводит значенния файла "result.txt".

6. Label для виведення результатів читання з файлу та роботи алгоритмів. Таких як: номер графа у вигляді "Граф 1", кількість вершин, кількість ребер, максимальний поток.

7. Реалізувати вікно для роботи з графами. Фукції: відкрити граф з файлу "graf.txt", створити вершину, видалити вершину, з'єднати вершини, виконувати алгоритми Форда-Фалкерсона та Алгоритм Эдмондса-Карпа, виводити максимальну спроможність графа, візуалізувати роботу алгоритма.
(Приклад роботи редактора графу: https://programforyou.ru/graph-redactor)

7.1. Реалізувати граф с кастомнимі кнопками круглої форми та ребра у вигляді лінії, яка зв'язує вершини. При читанні матриці відношень відтворити заданий граф за допомогою розроблених функцій. При використанні алгоритмів за пошуком максимального потоку потрібним вершинам та ребрам змінити колір на помаранчевий.

graf.txt
Кількість вершин, кількість ребер, матрицю відношень, масу ребер, 2 параметр ребра час

!Можливо створити сітку для коректного розміщення графа для п.7. Координатна сітка буде включати розмір фігур, які з цих фігур мають бути з'єднанні, та координати фігур.!

result.txt
Максимальний поток всіх графів та загальний час, знайти за допомогою додавання параметру час кожного ребра.  перевірку точності, за наступною формулою: Сумма всіх максимальних потоків поділити на кількість графів.